/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.ShipController;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;

/**
 *
 * @author Juan Camilo Mu√±os, Luis Miguel Sanchez Pinilla
 */
public class PlayerStatusBarView extends javax.swing.JPanel {

    /**
     * Creates new form gameBar
     */
    private ShipController tanque;
    
    public PlayerStatusBarView() {
 
    }
    public PlayerStatusBarView(ShipController tank){
        tanque = tank;
        initComponents();
    }
    
    /**
     * retorna el tanque con sus consumibles 
     * @return ControllerTank
     */
    public ShipController getTanque() {
        return tanque;
    }
    /**
     * destina el tanque que sera usado en el objeto
     * @param tanque a destinar
     */
    public void setTanque(ShipController tanque) {
       this.tanque = tanque;
       repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics grphcs) {
        super.paintComponent(grphcs); //To change body of generated methods, choose Tools | Templates.
        Graphics2D imgComplete = (Graphics2D) grphcs;
        float[] color = Color.RGBtoHSB(0,7,255, null);
        imgComplete.setColor(Color.getHSBColor(color[0], color[1], color[2]));
        try {
             for (int i = 0; i < tanque.getConsumable().getLivesSize(); i++) {
            ArrayList<Rectangle2D> shapes =  tanque.getConsumable().getlives().get(i).getShape();//formas del tanque
            for (int j = 0; j <  shapes.size(); j++) {
                imgComplete.fill(shapes.get(j));
            }
        }
        for (int i = 0; i < tanque.getConsumable().getSuperShootsSize(); i++) {
              ArrayList<Rectangle2D> shapes =  tanque.getConsumable().getSuperShoot().get(i).getShape();//formas del tanque
            for (int j = 0; j <  shapes.size(); j++) {
                imgComplete.fill(shapes.get(j));
            }
        }
        } catch (Exception e) {
        }
       
   
    
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
